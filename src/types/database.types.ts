// This file will be auto-generated by Supabase CLI
// Run: npx supabase gen types typescript --project-id YOUR_PROJECT_ID --schema public > src/types/database.types.ts

// Database types generated for Horizon Suite CRM
// This file should be regenerated when the database schema changes

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      coating_calculations: {
        Row: {
          id: string
          organization_id: string
          customer_id: string
          project_name: string
          surface_area: number
          coating_type: Database["public"]["Enums"]["coating_type"]
          coating_thickness: number
          number_of_coats: number
          material_cost_per_unit: number
          labor_cost_per_unit: number
          material_total: number
          labor_total: number
          overhead_percentage: number
          profit_margin: number
          final_quote: number
          status: Database["public"]["Enums"]["quote_status"]
          valid_until: string | null
          created_by: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          organization_id: string
          customer_id: string
          project_name: string
          surface_area: number
          coating_type: Database["public"]["Enums"]["coating_type"]
          coating_thickness: number
          number_of_coats?: number
          material_cost_per_unit?: number
          labor_cost_per_unit?: number
          overhead_percentage?: number
          profit_margin?: number
          status?: Database["public"]["Enums"]["quote_status"]
          valid_until?: string | null
          created_by: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          organization_id?: string
          customer_id?: string
          project_name?: string
          surface_area?: number
          coating_type?: Database["public"]["Enums"]["coating_type"]
          coating_thickness?: number
          number_of_coats?: number
          material_cost_per_unit?: number
          labor_cost_per_unit?: number
          overhead_percentage?: number
          profit_margin?: number
          status?: Database["public"]["Enums"]["quote_status"]
          valid_until?: string | null
          created_by?: string
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "coating_calculations_customer_id_fkey"
            columns: ["customer_id"]
            isOneToOne: false
            referencedRelation: "customers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "coating_calculations_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "coating_calculations_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      coating_materials: {
        Row: {
          id: string
          organization_id: string
          name: string
          type: Database["public"]["Enums"]["coating_type"]
          cost_per_unit: number
          unit_type: Database["public"]["Enums"]["unit_type"]
          coverage_per_unit: number
          supplier: string | null
          active: boolean
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          organization_id: string
          name: string
          type: Database["public"]["Enums"]["coating_type"]
          cost_per_unit: number
          unit_type: Database["public"]["Enums"]["unit_type"]
          coverage_per_unit: number
          supplier?: string | null
          active?: boolean
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          organization_id?: string
          name?: string
          type?: Database["public"]["Enums"]["coating_type"]
          cost_per_unit?: number
          unit_type?: Database["public"]["Enums"]["unit_type"]
          coverage_per_unit?: number
          supplier?: string | null
          active?: boolean
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "coating_materials_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      customers: {
        Row: {
          id: string
          organization_id: string
          name: string
          email: string | null
          phone: string | null
          address: Json
          notes: string | null
          created_by: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          organization_id: string
          name: string
          email?: string | null
          phone?: string | null
          address?: Json
          notes?: string | null
          created_by?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          organization_id?: string
          name?: string
          email?: string | null
          phone?: string | null
          address?: Json
          notes?: string | null
          created_by?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "customers_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "customers_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      organizations: {
        Row: {
          id: string
          name: string
          settings: Json
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          name: string
          settings?: Json
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          name?: string
          settings?: Json
          created_at?: string
          updated_at?: string
        }
        Relationships: []
      }
      profiles: {
        Row: {
          id: string
          full_name: string | null
          avatar_url: string | null
          role: Database["public"]["Enums"]["user_role"]
          organization_id: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          full_name?: string | null
          avatar_url?: string | null
          role?: Database["public"]["Enums"]["user_role"]
          organization_id?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          full_name?: string | null
          avatar_url?: string | null
          role?: Database["public"]["Enums"]["user_role"]
          organization_id?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "profiles_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "profiles_id_fkey"
            columns: ["id"]
            isOneToOne: true
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      projects: {
        Row: {
          id: string
          organization_id: string
          customer_id: string
          name: string
          description: string | null
          status: Database["public"]["Enums"]["project_status"]
          estimated_value: number
          actual_value: number
          start_date: string | null
          end_date: string | null
          created_by: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          organization_id: string
          customer_id: string
          name: string
          description?: string | null
          status?: Database["public"]["Enums"]["project_status"]
          estimated_value?: number
          actual_value?: number
          start_date?: string | null
          end_date?: string | null
          created_by: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          organization_id?: string
          customer_id?: string
          name?: string
          description?: string | null
          status?: Database["public"]["Enums"]["project_status"]
          estimated_value?: number
          actual_value?: number
          start_date?: string | null
          end_date?: string | null
          created_by?: string
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "projects_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "projects_customer_id_fkey"
            columns: ["customer_id"]
            isOneToOne: false
            referencedRelation: "customers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "projects_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      sales_opportunities: {
        Row: {
          id: string
          organization_id: string
          customer_id: string
          title: string
          description: string | null
          value: number
          stage: Database["public"]["Enums"]["sales_stage"]
          probability: number
          expected_close_date: string | null
          actual_close_date: string | null
          created_by: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          organization_id: string
          customer_id: string
          title: string
          description?: string | null
          value?: number
          stage?: Database["public"]["Enums"]["sales_stage"]
          probability?: number
          expected_close_date?: string | null
          actual_close_date?: string | null
          created_by: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          organization_id?: string
          customer_id?: string
          title?: string
          description?: string | null
          value?: number
          stage?: Database["public"]["Enums"]["sales_stage"]
          probability?: number
          expected_close_date?: string | null
          actual_close_date?: string | null
          created_by?: string
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "sales_opportunities_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "sales_opportunities_customer_id_fkey"
            columns: ["customer_id"]
            isOneToOne: false
            referencedRelation: "customers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "sales_opportunities_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
        ]
      }
    }
    Views: {
      coating_calculations_summary: {
        Row: {
          id: string
          organization_id: string
          customer_id: string
          project_name: string
          surface_area: number
          coating_type: Database["public"]["Enums"]["coating_type"]
          coating_thickness: number
          number_of_coats: number
          material_cost_per_unit: number
          labor_cost_per_unit: number
          material_total: number
          labor_total: number
          overhead_percentage: number
          profit_margin: number
          final_quote: number
          status: Database["public"]["Enums"]["quote_status"]
          valid_until: string | null
          created_by: string
          created_at: string
          updated_at: string
          customer_name: string
          customer_email: string | null
          created_by_name: string | null
          validity_status: string
        }
        Relationships: []
      }
      customer_summary: {
        Row: {
          id: string
          organization_id: string
          name: string
          email: string | null
          phone: string | null
          address: Json
          notes: string | null
          created_by: string | null
          created_at: string
          updated_at: string
          calculation_count: number
          total_quoted_value: number
          project_count: number
          total_project_value: number
          opportunity_count: number
          total_opportunity_value: number
          created_by_name: string | null
        }
        Relationships: []
      }
      project_summary: {
        Row: {
          id: string
          organization_id: string
          customer_id: string
          name: string
          description: string | null
          status: Database["public"]["Enums"]["project_status"]
          estimated_value: number
          actual_value: number
          start_date: string | null
          end_date: string | null
          created_by: string
          created_at: string
          updated_at: string
          customer_name: string
          customer_email: string | null
          created_by_name: string | null
        }
        Relationships: []
      }
      sales_pipeline: {
        Row: {
          id: string
          organization_id: string
          customer_id: string
          title: string
          description: string | null
          value: number
          stage: Database["public"]["Enums"]["sales_stage"]
          probability: number
          expected_close_date: string | null
          actual_close_date: string | null
          created_by: string
          created_at: string
          updated_at: string
          customer_name: string
          customer_email: string | null
          created_by_name: string | null
          weighted_value: number
        }
        Relationships: []
      }
    }
    Functions: {
      get_user_organization: {
        Args: Record<PropertyKey, never>
        Returns: string | null
      }
      is_admin: {
        Args: Record<PropertyKey, never>
        Returns: boolean
      }
      create_sample_organization: {
        Args: {
          org_name: string
          admin_user_id: string
        }
        Returns: string
      }
    }
    Enums: {
      coating_type: "primer" | "base_coat" | "top_coat" | "clear_coat" | "specialty" | "protective" | "decorative"
      project_status: "planning" | "active" | "on_hold" | "completed" | "cancelled"
      quote_status: "draft" | "sent" | "accepted" | "rejected"
      sales_stage: "lead" | "qualified" | "proposal" | "negotiation" | "won" | "lost"
      unit_type: "liter" | "kg" | "gallon" | "pound" | "sqm" | "sqft"
      user_role: "admin" | "user"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

type PublicSchema = Database[Extract<keyof Database, "public">]

export type Tables<
  PublicTableNameOrOptions extends
    | keyof (PublicSchema["Tables"] & PublicSchema["Views"])
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
        Database[PublicTableNameOrOptions["schema"]]["Views"])
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
      Database[PublicTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : PublicTableNameOrOptions extends keyof (PublicSchema["Tables"] &
        PublicSchema["Views"])
    ? (PublicSchema["Tables"] &
        PublicSchema["Views"])[PublicTableNameOrOptions] extends {
        Row: infer R
      }
      ? R
      : never
    : never

export type TablesInsert<
  PublicTableNameOrOptions extends
    | keyof PublicSchema["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I
    }
    ? I
    : never
  : PublicTableNameOrOptions extends keyof PublicSchema["Tables"]
    ? PublicSchema["Tables"][PublicTableNameOrOptions] extends {
        Insert: infer I
      }
      ? I
      : never
    : never

export type TablesUpdate<
  PublicTableNameOrOptions extends
    | keyof PublicSchema["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U
    }
    ? U
    : never
  : PublicTableNameOrOptions extends keyof PublicSchema["Tables"]
    ? PublicSchema["Tables"][PublicTableNameOrOptions] extends {
        Update: infer U
      }
      ? U
      : never
    : never

export type Enums<
  PublicEnumNameOrOptions extends
    | keyof PublicSchema["Enums"]
    | { schema: keyof Database },
  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicEnumNameOrOptions["schema"]]["Enums"]
    : never = never,
> = PublicEnumNameOrOptions extends { schema: keyof Database }
  ? Database[PublicEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : PublicEnumNameOrOptions extends keyof PublicSchema["Enums"]
    ? PublicSchema["Enums"][PublicEnumNameOrOptions]
    : never

export type CompositeTypes<
  PublicCompositeTypeNameOrOptions extends
    | keyof PublicSchema["CompositeTypes"]
    | { schema: keyof Database },
  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {
    schema: keyof Database
  }
    ? keyof Database[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"]
    : never = never,
> = PublicCompositeTypeNameOrOptions extends { schema: keyof Database }
  ? Database[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"][CompositeTypeName]
  : PublicCompositeTypeNameOrOptions extends keyof PublicSchema["CompositeTypes"]
    ? PublicSchema["CompositeTypes"][PublicCompositeTypeNameOrOptions]
    : never

// Convenience type exports
export type Organization = Database["public"]["Tables"]["organizations"]["Row"]
export type Profile = Database["public"]["Tables"]["profiles"]["Row"]
export type Customer = Database["public"]["Tables"]["customers"]["Row"]
export type CoatingMaterial = Database["public"]["Tables"]["coating_materials"]["Row"]
export type CoatingCalculation = Database["public"]["Tables"]["coating_calculations"]["Row"]
export type Project = Database["public"]["Tables"]["projects"]["Row"]
export type SalesOpportunity = Database["public"]["Tables"]["sales_opportunities"]["Row"]

// Insert types
export type OrganizationInsert = Database["public"]["Tables"]["organizations"]["Insert"]
export type ProfileInsert = Database["public"]["Tables"]["profiles"]["Insert"]
export type CustomerInsert = Database["public"]["Tables"]["customers"]["Insert"]
export type CoatingMaterialInsert = Database["public"]["Tables"]["coating_materials"]["Insert"]
export type CoatingCalculationInsert = Database["public"]["Tables"]["coating_calculations"]["Insert"]
export type ProjectInsert = Database["public"]["Tables"]["projects"]["Insert"]
export type SalesOpportunityInsert = Database["public"]["Tables"]["sales_opportunities"]["Insert"]

// Update types
export type OrganizationUpdate = Database["public"]["Tables"]["organizations"]["Update"]
export type ProfileUpdate = Database["public"]["Tables"]["profiles"]["Update"]
export type CustomerUpdate = Database["public"]["Tables"]["customers"]["Update"]
export type CoatingMaterialUpdate = Database["public"]["Tables"]["coating_materials"]["Update"]
export type CoatingCalculationUpdate = Database["public"]["Tables"]["coating_calculations"]["Update"]
export type ProjectUpdate = Database["public"]["Tables"]["projects"]["Update"]
export type SalesOpportunityUpdate = Database["public"]["Tables"]["sales_opportunities"]["Update"]

// View types
export type CustomerSummary = Database["public"]["Views"]["customer_summary"]["Row"]
export type ProjectSummary = Database["public"]["Views"]["project_summary"]["Row"]
export type SalesPipeline = Database["public"]["Views"]["sales_pipeline"]["Row"]
export type CoatingCalculationSummary = Database["public"]["Views"]["coating_calculations_summary"]["Row"]

// Enum types
export type UserRole = Database["public"]["Enums"]["user_role"]
export type ProjectStatus = Database["public"]["Enums"]["project_status"]
export type SalesStage = Database["public"]["Enums"]["sales_stage"]
export type CoatingType = Database["public"]["Enums"]["coating_type"]
export type QuoteStatus = Database["public"]["Enums"]["quote_status"]
export type UnitType = Database["public"]["Enums"]["unit_type"] 